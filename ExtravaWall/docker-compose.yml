volumes:
    prometheus_data: {}
    grafana_data: {}
    extravawall-db-data: {}

networks:
  extravawall-network-internal:
    name: extravawall-network-internal
    driver: bridge

services:
  extravawall-web-service:
    container_name: extravawall-web
    image: localhost/extravawall-web:latest
    #build: .
    #command: dotnet publish --os linux --arch x64 /t:PublishContainer -c Release
    restart: unless-stopped
    networks:
      - extravawall-network-internal
    ports:
      - 5001:8080
    depends_on:
      - extravawall-db-service
  
  extravawall-prometheus-service:
    container_name: extravawall-prometheus
    image: docker.io/prom/prometheus:latest
    networks:
      - extravawall-network-internal
    ports:
      - 9090:9090
    volumes:
      - ./container-files/prometheus:/etc/prometheus:Z
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    depends_on:
      - extravawall-web-service
    restart: unless-stopped
  
  extravawall-grafana-service:
    container_name: extravawall-grafana
    image: docker.io/grafana/grafana:latest
    networks:
      - extravawall-network-internal
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./container-files/grafana:/etc/grafana:Z
    depends_on: 
      - extravawall-prometheus-service
    restart: unless-stopped
  
  extravawall-db-service:
    container_name: extravawall-db
    image: docker.io/postgres:latest
    networks:
      - extravawall-network-internal
    ports:
      - 5432:5432
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: develop
      POSTGRES_DB: extravawall
    volumes:
      - extravawall-db-data:/var/lib/postgres
